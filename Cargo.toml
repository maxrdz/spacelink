[workspace]
resolver = "2"
members = [
  "spacelink",
  "spacelinkd",
]
default-members = []

[profile.release]
codegen-units = 1 # Best LLVM optimization
panic = "abort" # Remove unwind code on release
opt-level = 3
lto = true
strip = true

[workspace.package]
license = "GPL-3.0-or-later"
version = "0.1.0"
edition = "2021"
rust-version = "1.81"
authors = [
  "Max Rodriguez <me@maxrdz.com>"
]
repository = "https://gitlab.com/maxrdz/spacelink"

[workspace.metadata.cross.build]
default-target = "aarch64-unknown-linux-gnu"

[workspace.metadata.cross.target.aarch64-unknown-linux-gnu]
image.name = "ubuntu:24.04"
image.toolchain = ["aarch64-unknown-linux-gnu"]
pre-build = [
    "apt-get update",
    "apt-get install --assume-yes git llvm clang pkg-config gcc g++",
    "apt-get download libclang-dev libxkbcommon0 libxkbcommon-dev modemmanager-dev",
    "dpkg --force-all -i *.deb",
]

[workspace.dependencies]
cfg-if = "1"
tokio = { version = "1.41.0", features = ["full"] }
tracing = "0.1.41"
zbus = "5.2"

[workspace.dependencies.i18n-embed]
version = "0.15"
features = ["fluent-system", "desktop-requester"]

[workspace.dependencies.libcosmic]
git = "https://github.com/pop-os/libcosmic.git"
# See https://github.com/pop-os/libcosmic/blob/master/Cargo.toml for available features.
features = [
    # COSMIC about widget
    "about",
    # Accessibility support
    "a11y",
    # Uses cosmic-settings-daemon to watch for config file changes
    "dbus-config",
    # Support creating additional application windows.
    "multi-window",
    # On app startup, focuses an existing instance if the app is already open
    "single-instance",
    # Uses tokio as the executor for the runtime
    "tokio",
    # Windowing support for X11, Windows, Mac, & Redox
    "winit",
    # Add Wayland support to winit
    "wayland",
    # GPU-accelerated rendering
    "wgpu",
]

# Uncomment to test a locally-cloned libcosmic
# [patch.'https://github.com/pop-os/libcosmic']
# libcosmic = { path = "../libcosmic" }
# cosmic-config = { path = "../libcosmic/cosmic-config" }
# cosmic-theme = { path = "../libcosmic/cosmic-theme" }
